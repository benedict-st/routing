{"version":3,"sources":["app/components/pagination.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/groupList.jsx","app/components/searchStatus.jsx","app/components/bookmark.jsx","app/components/quality.jsx","app/components/qualitiesList.jsx","app/components/tableBody.jsx","app/components/tableHeader.jsx","app/components/table.jsx","app/components/usersTable.jsx","app/layouts/user.jsx","app/components/users.jsx","app/utils/paginate.js","app/components/navBar.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/App.js","index.js"],"names":["Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","className","map","page","onClick","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","professions","completedMeetings","rate","bookmark","API","fetchAll","Promise","resolve","window","setTimeout","getById","id","find","user","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","item","role","Object","keys","defaultProps","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","Quality","QualitiesList","qual","TableBody","data","columns","renderContent","column","component","path","to","get","TableHeader","onSort","selectedSort","renderSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","delete","User","history","useHistory","useState","setUser","useEffect","api","then","replace","Users","setCurrentPage","setProfession","selectedProf","setSelectedProf","sortBy","setSortBy","userId","useParams","setUsers","filteredUsers","filter","JSON","stringify","count","usersCrop","pageNumber","startIndex","splice","paginate","orderBy","newArray","pageIndex","NavBar","class","Login","Main","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88ac6643.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users);\n        }, 2000);\n    });\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users.find((user) => user._id === id));\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nconst API = {\n    users,\n    professions\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n\n            return component;\n        }\n\n        if (columns[column].path === \"name\") {\n            return (\n                <Link to={`users/${item._id}`}>\n                    <h6>{_.get(item, columns[column].path)}</h6>\n                </Link>\n            );\n        }\n\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const renderSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {renderSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"./bookmark\";\nimport QualitiesList from \"./qualitiesList\";\nimport Table from \"./table\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: { path: \"name\", name: \"Имя\" },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <QualitiesList qualities={user.qualities} />\n        },\n        professions: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../api\";\r\nimport PropTypes from \"prop-types\";\r\nimport QualitiesList from \"../components/qualitiesList\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst User = ({ id }) => {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    useEffect(() => {\r\n        api.users.getById(id).then((data) => setUser(data));\r\n    }, []);\r\n    const HandleReturn = () => {\r\n        history.replace(\"/users\");\r\n    };\r\n    if (user) {\r\n        return (\r\n            <>\r\n                <h1>\r\n                    {user ? (\r\n                        <>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">\r\n                                    <h5>{user.name}</h5>\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    <h5>Профессия {user.profession.name}</h5>\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    <h5>\r\n                                        <QualitiesList\r\n                                            qualities={user.qualities}\r\n                                        />\r\n                                    </h5>\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    <h5>\r\n                                        completedMeetings{\" \"}\r\n                                        {user.completedMeetings}\r\n                                    </h5>\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    <h5>rate {user.rate}</h5>\r\n                                </li>\r\n                            </ul>\r\n                            <button\r\n                                className=\"btn btn-primary \"\r\n                                onClick={() => {\r\n                                    HandleReturn();\r\n                                }}\r\n                            >\r\n                                Все пользователи\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        `не найден пользователь с ID: ${id}`\r\n                    )}\r\n                </h1>\r\n            </>\r\n        );\r\n    }\r\n    return <div className=\"spinner-border text-warning\" role=\"status\"></div>;\r\n};\r\nUser.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    id: PropTypes.toString.isRequired,\r\n    getUsesrById: PropTypes.func.isRequired,\r\n    user: PropTypes.array.isRequired\r\n};\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../utils/paginate\";\nimport Pagination from \"./pagination\";\nimport api from \"../api\";\nimport GroupList from \"./groupList\";\nimport SearchStatus from \"./searchStatus\";\nimport UserTable from \"./usersTable\";\nimport { useParams } from \"react-router-dom\";\nimport User from \"../layouts/user\";\nimport _ from \"lodash\";\nconst Users = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n    const params = useParams();\n    const { userId } = params;\n    const [users, setUsers] = useState();\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf]);\n\n    const handleProfessionSelect = (item) => {\n        setSelectedProf(item);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = selectedProf\n            ? users.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <>\n                {userId ? (\n                    <>\n                        <User id={userId} />\n                    </>\n                ) : (\n                    <>\n                        <div className=\"d-flex\">\n                            {professions && (\n                                <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                                    <GroupList\n                                        selectedItem={selectedProf}\n                                        items={professions}\n                                        onItemSelect={handleProfessionSelect}\n                                    />\n                                    <button\n                                        className=\"btn btn-secondary mt-2\"\n                                        onClick={clearFilter}\n                                    >\n                                        {\" \"}\n                                        Очистить\n                                    </button>\n                                </div>\n                            )}\n                            <div className=\"d-flex flex-column\">\n                                <SearchStatus length={count} />\n                                {count > 0 && (\n                                    <UserTable\n                                        users={usersCrop}\n                                        onSort={handleSort}\n                                        selectedSort={sortBy}\n                                        onDelete={handleDelete}\n                                        onToggleBookMark={handleToggleBookMark}\n                                    />\n                                )}\n                                <div className=\"d-flex justify-content-center\">\n                                    <Pagination\n                                        itemsCount={count}\n                                        pageSize={pageSize}\n                                        currentPage={currentPage}\n                                        onPageChange={handlePageChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )}\n            </>\n        );\n    }\n    return \"loading...\";\n};\nUsers.propTypes = {\n    users: PropTypes.array\n};\n\nexport default Users;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <div className=\"container\">\r\n            <ul className=\"nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link class=\"nav-link active\" to=\"/\">\r\n                        Main\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/users\">\r\n                        Users\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nconst Login = () => {\r\n    return <h3>Login Page</h3>;\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nconst Main = () => {\r\n    return <h3>Main Page</h3>;\r\n};\r\nexport default Main;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Users from \"./components/users\";\nimport NavBar from \"./components/navBar\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nfunction App() {\n    return (\n        <>\n            <div>\n                <NavBar />\n                <Switch>\n                    <Route path=\"/\" exact component={Main} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/users/:userId?\" component={Users} />\n                </Switch>\n            </div>\n        </>\n    );\n\n    // return <Users />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}